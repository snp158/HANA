*&---------------------------------------------------------------------*
*& Report  ZBC_SMART_DELTA_MERGE
*&
*&---------------------------------------------------------------------*
*&  Written by Nikolay Shitov (nikolay.shitov@eldorado.ru)
*&   Check in HANA:
*&  select * from M_DELTA_MERGE_STATISTICS
*&    where  DAYS_BETWEEN(start_time,NOW())=0 and motivation='SMART'
*&    order by start_time desc
*&
*&      SQL Syntax:
*&      MERGE DELTA OF <table_name> WITH PARAMETERS ('SMART_MERGE'='ON' | ‘OFF’)
*&      21.11.2016  version 1.00   (add compression)
*&   IF FORCED_MERGE THEN CAN BE:
*&   UPDATE "<table_name>" WITH PARAMETERS ('OPTIMIZE_COMPRESSION' = 'FORCE')
*&---------------------------------------------------------------------*

REPORT ZBC_SMART_DELTA_MERGE.
* header
DATA: x TYPE I,
      h0(4)  TYPE c VALUE 'N   ',
      h1(12) TYPE c VALUE 'TABLE_NAME',
      h2(25) TYPE c VALUE 'RAW_RECORD_COUNT_IN_DELTA'.
 TOP-OF-PAGE.
  x = sy-colno.       POSITION x. WRITE h0.
  x = sy-colno + 4.   POSITION x. WRITE h1.
  x = sy-colno + 20.   POSITION x. WRITE h2.

TABLES:
  DD09L.

TYPES: BEGIN OF tCS_COL,
          SCHEMA_NAME(256) TYPE C,
          LOADED(5) TYPE C,
          TABLE_NAME(256) TYPE C,
          RECORD_COUNT TYPE P,
          RAW_RECORD_COUNT_IN_DELTA TYPE P,
          MEMORY_SIZE_IN_TOTAL TYPE P,
          MEMORY_SIZE_IN_MAIN TYPE P,
          MEMORY_SIZE_IN_DELTA TYPE P,
       END OF tCS_COL.

DATA: gi_CS_COL TYPE STANDARD TABLE OF tCS_COL,
      gs_CS_COL TYPE tCS_COL, "line
      g_iCNT    TYPE I.  " count of the tables
DATA: sTBL TYPE STRING,  " Table name in current connection SCHEMA
      sSQL TYPE STRING,  " formed HANA statemen
      sSQL_L TYPE STRING, "Long clause
      vsIN TYPE STRING.
DATA: VCOUNT TYPE I.
DATA sTBL_tmp  TYPE STRING.
*  ADBC FM
DATA:  oSQL TYPE REF TO cl_sql_statement,  "ADBC class
        oERR TYPE REF TO cx_sql_exception,
        oRes TYPE REF TO cl_sql_result_set,
        oCon TYPE REF TO cl_sql_connection,
        oDat TYPE REF TO data,
        exc_ref  TYPE REF TO cx_sy_native_sql_error,
        error_text TYPE string.

START-OF-SELECTION.

PARAMETERS p_VIEW AS CHECKBOX DEFAULT 'X'.
SELECT-OPTIONS:
  s_tabnam FOR DD09L-TABNAME.
PARAMETERS p_force AS CHECKBOX.
PARAMETERS p_compr AS CHECKBOX.
* 17.11.2016 UPDATE "<table_name>" WITH PARAMETERS ('OPTIMIZE_COMPRESSION' = 'FORCE')

LOOP AT s_tabnam .
         CONCATENATE '''' s_tabnam-LOW '''' INTO s_tabnam-LOW .
         CONCATENATE s_tabnam-LOW  vsIN INTO vsIN SEPARATED BY ',' .
ENDLOOP.

VCOUNT   = STRLEN( vsIN ) .
IF VCOUNT > 0.
  VCOUNT = VCOUNT - 1 .
  vsIN = vsIN(VCOUNT) .        " Remove the comma in the last position of strng and Now vstring contains all the values.
ELSE.
  WRITE : / 'NO TABLES SELECTED'.
  EXIT.
ENDIF.
*&---------------------------------------------------------------------*

 TRY.
   CREATE OBJECT oSQL.

*   CONCATENATE
*     'SELECT SCHEMA_NAME,TABLE_NAME,AUTO_MERGE_ON'
*     ' FROM TABLES WHERE TABLE_TYPE <> ''ROW'' AND SCHEMA_NAME LIKE ''SAP%'' AND TABLE_NAME IN('
*       vsIN
*       ')' INTO vsIN.
CONCATENATE
      'SELECT '     "TOP ' c_mxROWS   "max 100'
      ' schema_name,LOADED,TABLE_NAME,RECORD_COUNT,'
      ' RAW_RECORD_COUNT_IN_DELTA,MEMORY_SIZE_IN_TOTAL,MEMORY_SIZE_IN_MAIN,MEMORY_SIZE_IN_DELTA'
      ' FROM M_CS_TABLES'
      ' WHERE schema_name LIKE  ''SAP%'''
      ' AND TABLE_NAME IN(' vsIN ')'
      ' ORDER BY RAW_RECORD_COUNT_IN_DELTA Desc'
       INTO sSQL_L.

   oRes = oSQL->EXECUTE_QUERY( sSQL_L ) .
*    gi_CS_COL
   GET REFERENCE OF gi_CS_COL INTO oDat.
   oRes->SET_PARAM_TABLE( oDat ) .
   oRes->NEXT_PACKAGE( ).
   oRes->CLOSE( ).
*   oConn = cl_sql_connection=>get_connection( pv_dbcon ).
*   oConn->CLOSE( ).

   g_iCNT = 1.
   LOOP AT gi_CS_COL INTO gs_CS_COL.
     CONDENSE gs_CS_COL-TABLE_NAME.
     write: / g_iCNT  LEFT-JUSTIFIED       UNDER h0,
              gs_CS_COL-TABLE_NAME         UNDER h1,
              gs_CS_COL-RAW_RECORD_COUNT_IN_DELTA LEFT-JUSTIFIED NO-GROUPING UNDER h2.
      g_iCNT = g_iCNT + 1.
    ENDLOOP.

  IF p_VIEW <> 'X'.   " not to execute if test mode
* remove partitions from list
    SORT gi_CS_COL BY TABLE_NAME.
    DELETE ADJACENT DUPLICATES FROM gi_CS_COL COMPARING TABLE_NAME.
    SORT gi_CS_COL BY RAW_RECORD_COUNT_IN_DELTA DESCENDING.
*   ===========================================================
     g_iCNT = 1.
*   =======Header============
     MESSAGE '   N:                              RECORDS COUNT IN DELTA' TYPE 'I'.
     LOOP AT gi_CS_COL INTO gs_CS_COL.  " circle for all tables with maximum counts of rows in DELTA storage
      CONDENSE gs_CS_COL-TABLE_NAME.
           sTBL = gs_CS_COL-TABLE_NAME.
           IF p_force = 'X'.            " SMART or FORCED?
              CONCATENATE 'MERGE DELTA OF "' sTBL '" WITH PARAMETERS(''FORCED_MERGE''=''ON'')' INTO sSQL.
           ELSE.
              CONCATENATE 'MERGE DELTA OF "' sTBL '" WITH PARAMETERS(''SMART_MERGE''=''ON'')' INTO sSQL.
           ENDIF.

           IF SY-BATCH = 'X' .
             DATA: s_iCNT(5) TYPE C,
                   sRAW_RECORD_COUNT_IN_DELTA(10) TYPE C.
*                   sTBL_tmp  TYPE STRING.
             sTBL_tmp = sTBL.
             PERFORM FILL_RSPACE_N USING 30 CHANGING sTBL_tmp.

             s_iCNT = g_iCNT.
             sRAW_RECORD_COUNT_IN_DELTA = gs_CS_COL-RAW_RECORD_COUNT_IN_DELTA.
             CONDENSE sRAW_RECORD_COUNT_IN_DELTA.
             CONCATENATE s_iCNT ':' sTBL_tmp  sRAW_RECORD_COUNT_IN_DELTA INTO vsIN.
             MESSAGE vsIN TYPE 'I'.
             commit WORK.
           ENDIF.
           oSQL->EXECUTE_DDL( sSQL ).
*
*           COMPRESSION: UPDATE "<table_name>" WITH PARAMETERS ('OPTIMIZE_COMPRESSION' = 'FORCE')
*
          IF p_compr = 'X' AND p_force = 'X'.
             IF SY-BATCH = 'X' .
                CONCATENATE '.....' sTBL ':OPTIMIZE_COMPRESSION=''FORCE''' INTO sTBL_tmp.
                MESSAGE sTBL_tmp TYPE 'I'.
                commit WORK.
             ENDIF.
           CONCATENATE 'UPDATE "' sTBL '" WITH PARAMETERS(''OPTIMIZE_COMPRESSION''=''FORCE'')' INTO sSQL.
           oSQL->EXECUTE_DDL( sSQL ).
          ENDIF.
       g_iCNT = g_iCNT + 1.
     ENDLOOP.
  ENDIF.
  CATCH cx_sy_native_sql_error INTO exc_ref.
    error_text = exc_ref->get_text( ).
    MESSAGE error_text TYPE 'I'.
    write: / error_text.
    EXIT.
 ENDTRY.
* ----------------------------------------------------------------------- *
  form FILL_RSPACE_N USING iN TYPE I CHANGING vsTBL.
       DATA iSpaces TYPE I.
            iSpaces = iN - STRLEN( vsTBL ).
            DO iSpaces TIMES.
               CONCATENATE vsTBL space INTO vsTBL  RESPECTING BLANKS.
            ENDDO.
  endform.

* start SMART DELTA MERGE